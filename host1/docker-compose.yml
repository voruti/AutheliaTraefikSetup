version: '3'
services:

  authelia:
    image: authelia/authelia:4.37.5

    healthcheck:
      disable: true

    environment:
      PUID: 1000
      PGID: 1000
      AUTHELIA_SESSION_DOMAIN: "${DOMAIN:?error}"

    volumes:
      - "./authelia:/config:rw"
      - "./authelialog:/authelialog:rw"

    labels:
      traefik.http.routers.authelia.rule: "Host(`autheliatest.${DOMAIN:?error}`)"

      traefik.http.middlewares.authelia.forwardauth.address: "http://authelia:9091/api/verify?rd=https%3A%2F%2Fautheliatest.${DOMAIN:?error}%2F"
      traefik.http.middlewares.authelia.forwardauth.trustForwardHeader: "true"
      traefik.http.middlewares.authelia.forwardauth.authResponseHeaders: "Remote-User,Remote-Groups,Remote-Name,Remote-Email"

  traefik:
    image: traefik

    environment:
      TRAEFIK_API: "true"
      TRAEFIK_LOG_LEVEL: "DEBUG"
      TRAEFIK_ACCESSLOG: "true"
      TRAEFIK_ACCESSLOG_FORMAT: "json"
      TRAEFIK_ACCESSLOG_FILEPATH: "/traefiklog/access.log"
      TRAEFIK_ACCESSLOG_FIELDS_HEADERS_DEFAULTMODE: "keep"

      TRAEFIK_PROVIDERS_DOCKER: "true"
      TRAEFIK_PROVIDERS_DOCKER_NETWORK: "host1_default"

      TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS: ":443"
      TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS: "true"
      TRAEFIK_ENTRYPOINTS_WEBSECURE_FORWARDEDHEADERS_TRUSTEDIPS: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
      TRAEFIK_ENTRYPOINTS_WEBSECURE_PROXYPROTOCOL_TRUSTEDIPS: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"

      # ACME DNS challenge:
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_TLSCHALLENGE: "false"
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_DNSCHALLENGE: "true"
      # TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_CASERVER: "https://acme-staging-v02.api.letsencrypt.org/directory"

    env_file:
      - .env

    ports:
      - "443:443"

    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./acme.json:/acme.json:rw"
      - "./traefiklog:/traefiklog:rw"

    labels:
      # Traefik dashboard:
      traefik.http.routers.traefik.rule: "Host(`traefik-host1.${DOMAIN:?error}`)"
      traefik.http.routers.traefik.service: "api@internal"

      # Lets Encrypt:
      traefik.http.routers.wildcarddomain.service: "noop@internal"
      traefik.http.routers.wildcarddomain.tls.certResolver: "letsencrypt"
      "traefik.http.routers.wildcarddomain.tls.domains[0].main": "*.${DOMAIN:?error}"
      "traefik.http.routers.wildcarddomain.tls.domains[0].sans": "${DOMAIN:?error}"

  service:
    image: traefik/whoami
    labels:
      traefik.http.routers.service.rule: Host(`service-host1.${DOMAIN:?error}`)
      traefik.http.routers.service.middlewares: "authelia@docker"
