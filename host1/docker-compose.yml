version: '3'
services:

  authelia:
    image: authelia/authelia:v4.38.0-beta3

    healthcheck:
      disable: true

    environment:
      PUID: 1000
      PGID: 1000

    volumes:
      - "./authelia:/config:rw"
      - "./authelialog:/authelialog:rw"

    labels:
      traefik.http.routers.authelia.rule: "Host(`autheliatest.${DOMAIN:?error}`)"

      traefik.http.middlewares.authelia.forwardauth.address: "http://authelia:9091/api/authz/forward-auth"
      traefik.http.middlewares.authelia.forwardauth.trustForwardHeader: "true"
      traefik.http.middlewares.authelia.forwardauth.authResponseHeaders: "Authorization,Proxy-Authorization,Remote-User,Remote-Groups,Remote-Name,Remote-Email"

  traefik:
    image: mendhak/http-https-echo

    environment:
      HTTPS_PORT: 443

    ports:
      - "443:443"

    labels:
      # Traefik dashboard:
      traefik.http.routers.traefik.rule: "Host(`traefik-host1.${DOMAIN:?error}`)"
      traefik.http.routers.traefik.service: "api@internal"

      # Lets Encrypt:
      traefik.http.routers.wildcarddomain.service: "noop@internal"
      traefik.http.routers.wildcarddomain.tls.certResolver: "letsencrypt"
      "traefik.http.routers.wildcarddomain.tls.domains[0].main": "*.${DOMAIN:?error}"
      "traefik.http.routers.wildcarddomain.tls.domains[0].sans": "${DOMAIN:?error}"

  service:
    image: traefik/whoami
    labels:
      traefik.http.routers.service.rule: Host(`service-host1.${DOMAIN:?error}`)
      traefik.http.routers.service.middlewares: "authelia@docker"
